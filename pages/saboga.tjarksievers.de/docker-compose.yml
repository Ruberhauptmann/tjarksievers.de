services:
  saboga-frontend:
    image: ghcr.io/ruberhauptmann/saboga-frontend:0.0.9
    container_name: saboga-frontend
    labels:
      - "traefik.http.routers.saboga-frontend.rule=Host(`saboga.tjarksievers.de`)"
      - "traefik.http.routers.saboga-frontend.tls=true"
      - "traefik.http.routers.saboga-frontend.tls.certresolver=certresolver"
    depends_on:
      - reverse-proxy
      - saboga-api
    restart: always
    networks:
      - reverse-proxy
      - saboga-api

  saboga-api:
    image: ghcr.io/ruberhauptmann/saboga-api:0.0.57
    container_name: saboga-api
    labels:
      - "traefik.http.routers.saboga-api.rule=Host(`saboga.tjarksievers.de`) && PathPrefix(`/api`)"
      - "traefik.http.routers.saboga-api.tls=true"
      - "traefik.http.routers.saboga-api.tls.certresolver=certresolver"
      - "traefik.http.routers.saboga-api.middlewares=strip-api-prefix"
      - "traefik.http.middlewares.strip-api-prefix.stripPrefix.prefixes=/api"
    environment:
      POSTGRES_URI: ${POSTGRES_URI}
      BGG_USERNAME: ${BGG_USERNAME}
      BGG_PASSWORD: ${BGG_PASSWORD}
    volumes:
      - saboga_api_static:/app/static
      - saboga_api_img:/app/img
    restart: always
    expose:
      - "8000"
    depends_on:
      - reverse-proxy
    networks:
      - reverse-proxy
      - saboga-api
      - loki

  saboga-database:
    image: postgres:17
    container_name: saboga-database
    volumes:
      - saboga_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: saboga
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN}
    networks:
      - saboga-api

volumes:
  saboga_db_data:
  saboga_api_static:
  saboga_api_img:

networks:
  saboga-api:
    driver: bridge
    internal: true
